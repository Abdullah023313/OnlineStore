//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_StoreEntities : DbContext
    {
        public DB_StoreEntities()
            : base("name=DB_StoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TBCart> TBCarts { get; set; }
        public virtual DbSet<TBColor> TBColors { get; set; }
        public virtual DbSet<TBDetail> TBDetails { get; set; }
        public virtual DbSet<TBImage> TBImages { get; set; }
        public virtual DbSet<TBInvoice> TBInvoices { get; set; }
        public virtual DbSet<TBMsg> TBMsgs { get; set; }
        public virtual DbSet<TBProduct> TBProducts { get; set; }
        public virtual DbSet<TBProductType> TBProductTypes { get; set; }
        public virtual DbSet<TBRate> TBRates { get; set; }
        public virtual DbSet<TBUser> TBUsers { get; set; }
        public virtual DbSet<checkQuantity> checkQuantities { get; set; }
    
        public virtual int addCart(Nullable<System.Guid> idCart, Nullable<System.Guid> idUser, Nullable<System.Guid> idProduct)
        {
            var idCartParameter = idCart.HasValue ?
                new ObjectParameter("IdCart", idCart) :
                new ObjectParameter("IdCart", typeof(System.Guid));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addCart", idCartParameter, idUserParameter, idProductParameter);
        }
    
        public virtual int addDetails(Nullable<System.Guid> idinvoice, Nullable<System.Guid> idproduct, Nullable<int> quantity)
        {
            var idinvoiceParameter = idinvoice.HasValue ?
                new ObjectParameter("idinvoice", idinvoice) :
                new ObjectParameter("idinvoice", typeof(System.Guid));
    
            var idproductParameter = idproduct.HasValue ?
                new ObjectParameter("idproduct", idproduct) :
                new ObjectParameter("idproduct", typeof(System.Guid));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addDetails", idinvoiceParameter, idproductParameter, quantityParameter);
        }
    
        public virtual int addInvoice(Nullable<System.Guid> idinvoice, string customer, Nullable<System.Guid> idEmploye, Nullable<System.DateTime> date)
        {
            var idinvoiceParameter = idinvoice.HasValue ?
                new ObjectParameter("idinvoice", idinvoice) :
                new ObjectParameter("idinvoice", typeof(System.Guid));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var idEmployeParameter = idEmploye.HasValue ?
                new ObjectParameter("idEmploye", idEmploye) :
                new ObjectParameter("idEmploye", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addInvoice", idinvoiceParameter, customerParameter, idEmployeParameter, dateParameter);
        }
    
        public virtual int addmsg(Nullable<System.Guid> idMsg, string msg, string name, string phone, string mail, string subject, Nullable<System.Guid> idUser, Nullable<System.DateTime> date)
        {
            var idMsgParameter = idMsg.HasValue ?
                new ObjectParameter("IdMsg", idMsg) :
                new ObjectParameter("IdMsg", typeof(System.Guid));
    
            var msgParameter = msg != null ?
                new ObjectParameter("Msg", msg) :
                new ObjectParameter("Msg", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addmsg", idMsgParameter, msgParameter, nameParameter, phoneParameter, mailParameter, subjectParameter, idUserParameter, dateParameter);
        }
    
        public virtual int addProduct(Nullable<System.Guid> idProduct, Nullable<int> quantity, Nullable<double> purchasing_Price, Nullable<double> selling_Price, string details, string description, string name, string company, Nullable<double> rate, Nullable<System.Guid> idType)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(System.Guid));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var purchasing_PriceParameter = purchasing_Price.HasValue ?
                new ObjectParameter("Purchasing_Price", purchasing_Price) :
                new ObjectParameter("Purchasing_Price", typeof(double));
    
            var selling_PriceParameter = selling_Price.HasValue ?
                new ObjectParameter("Selling_Price", selling_Price) :
                new ObjectParameter("Selling_Price", typeof(double));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(double));
    
            var idTypeParameter = idType.HasValue ?
                new ObjectParameter("IdType", idType) :
                new ObjectParameter("IdType", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProduct", idProductParameter, quantityParameter, purchasing_PriceParameter, selling_PriceParameter, detailsParameter, descriptionParameter, nameParameter, companyParameter, rateParameter, idTypeParameter);
        }
    
        public virtual int addProductColor(Nullable<System.Guid> idColor, string color, Nullable<System.Guid> idProduct)
        {
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(System.Guid));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProductColor", idColorParameter, colorParameter, idProductParameter);
        }
    
        public virtual int addProductImage(Nullable<System.Guid> idImage, string pathImage, Nullable<System.Guid> idProduct)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("IdImage", idImage) :
                new ObjectParameter("IdImage", typeof(System.Guid));
    
            var pathImageParameter = pathImage != null ?
                new ObjectParameter("PathImage", pathImage) :
                new ObjectParameter("PathImage", typeof(string));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProductImage", idImageParameter, pathImageParameter, idProductParameter);
        }
    
        public virtual int addProductType(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProductType", typeParameter);
        }
    
        public virtual int addUser(Nullable<System.Guid> idUser, string mail, string username, string password, string role)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addUser", idUserParameter, mailParameter, usernameParameter, passwordParameter, roleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> check_mail(string mail)
        {
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("check_mail", mailParameter);
        }
    
        public virtual int deletedColorById(Nullable<System.Guid> idColor)
        {
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletedColorById", idColorParameter);
        }
    
        public virtual int deleteDetails(Nullable<System.Guid> iddetail)
        {
            var iddetailParameter = iddetail.HasValue ?
                new ObjectParameter("iddetail", iddetail) :
                new ObjectParameter("iddetail", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteDetails", iddetailParameter);
        }
    
        public virtual int deletedImageById(Nullable<System.Guid> idImage)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("IdImage", idImage) :
                new ObjectParameter("IdImage", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletedImageById", idImageParameter);
        }
    
        public virtual int deletedProductById(Nullable<System.Guid> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletedProductById", productIDParameter);
        }
    
        public virtual int deletedProductTypetById(Nullable<System.Guid> idType)
        {
            var idTypeParameter = idType.HasValue ?
                new ObjectParameter("IdType", idType) :
                new ObjectParameter("IdType", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletedProductTypetById", idTypeParameter);
        }
    
        public virtual int deleteInvoice(Nullable<System.Guid> idInvoice)
        {
            var idInvoiceParameter = idInvoice.HasValue ?
                new ObjectParameter("idInvoice", idInvoice) :
                new ObjectParameter("idInvoice", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteInvoice", idInvoiceParameter);
        }
    
        public virtual int deleteInvoiceDetails(Nullable<System.Guid> idInvoice)
        {
            var idInvoiceParameter = idInvoice.HasValue ?
                new ObjectParameter("idInvoice", idInvoice) :
                new ObjectParameter("idInvoice", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteInvoiceDetails", idInvoiceParameter);
        }
    
        public virtual int deleteProductCart(Nullable<System.Guid> idUser, Nullable<System.Guid> idIdProduct)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idIdProductParameter = idIdProduct.HasValue ?
                new ObjectParameter("IdIdProduct", idIdProduct) :
                new ObjectParameter("IdIdProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteProductCart", idUserParameter, idIdProductParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> FinalPriceCart(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("FinalPriceCart", idUserParameter);
        }
    
        public virtual ObjectResult<getAllEmploye_Result> getAllEmploye()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllEmploye_Result>("getAllEmploye");
        }
    
        public virtual ObjectResult<GetAllProduct_Result> GetAllProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProduct_Result>("GetAllProduct");
        }
    
        public virtual ObjectResult<getAllProductType_Result> getAllProductType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllProductType_Result>("getAllProductType");
        }
    
        public virtual ObjectResult<getColorByIdProduct_Result> getColorByIdProduct(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getColorByIdProduct_Result>("getColorByIdProduct", idParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> getIdUser(string mail, string password)
        {
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("getIdUser", mailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<getImageByIdProduct_Result> getImageByIdProduct(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getImageByIdProduct_Result>("getImageByIdProduct", idParameter);
        }
    
        public virtual ObjectResult<getMainImage_Result> getMainImage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMainImage_Result>("getMainImage");
        }
    
        public virtual ObjectResult<getmoreProduct_Result> getmoreProduct(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getmoreProduct_Result>("getmoreProduct", idUserParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GetProductInvoice(Nullable<System.Guid> idInvoice)
        {
            var idInvoiceParameter = idInvoice.HasValue ?
                new ObjectParameter("idInvoice", idInvoice) :
                new ObjectParameter("idInvoice", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GetProductInvoice", idInvoiceParameter);
        }
    
        public virtual ObjectResult<getProductsCart_Result> getProductsCart(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProductsCart_Result>("getProductsCart", idUserParameter);
        }
    
        public virtual ObjectResult<getSomeProduct_Result> getSomeProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSomeProduct_Result>("getSomeProduct");
        }
    
        public virtual int ModifyRate(Nullable<System.Guid> idProduct)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyRate", idProductParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateCart(Nullable<System.Guid> idUser, Nullable<System.Guid> idProduct, Nullable<int> qty)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCart", idUserParameter, idProductParameter, qtyParameter);
        }
    
        public virtual int updateImageById(Nullable<System.Guid> idImage, string pathImage)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("IdImage", idImage) :
                new ObjectParameter("IdImage", typeof(System.Guid));
    
            var pathImageParameter = pathImage != null ?
                new ObjectParameter("pathImage", pathImage) :
                new ObjectParameter("pathImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateImageById", idImageParameter, pathImageParameter);
        }
    
        public virtual int updateProductById(Nullable<System.Guid> idProduct, Nullable<int> quantity, Nullable<double> purchasing_Price, Nullable<double> selling_Price, string details, string description, string company, Nullable<double> rate, Nullable<System.Guid> idType)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(System.Guid));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var purchasing_PriceParameter = purchasing_Price.HasValue ?
                new ObjectParameter("Purchasing_Price", purchasing_Price) :
                new ObjectParameter("Purchasing_Price", typeof(double));
    
            var selling_PriceParameter = selling_Price.HasValue ?
                new ObjectParameter("Selling_Price", selling_Price) :
                new ObjectParameter("Selling_Price", typeof(double));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(double));
    
            var idTypeParameter = idType.HasValue ?
                new ObjectParameter("IdType", idType) :
                new ObjectParameter("IdType", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProductById", idProductParameter, quantityParameter, purchasing_PriceParameter, selling_PriceParameter, detailsParameter, descriptionParameter, companyParameter, rateParameter, idTypeParameter);
        }
    
        public virtual int updateProductTypeById(Nullable<System.Guid> idType, string type, string icon1, string icon2)
        {
            var idTypeParameter = idType.HasValue ?
                new ObjectParameter("IdType", idType) :
                new ObjectParameter("IdType", typeof(System.Guid));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var icon1Parameter = icon1 != null ?
                new ObjectParameter("icon1", icon1) :
                new ObjectParameter("icon1", typeof(string));
    
            var icon2Parameter = icon2 != null ?
                new ObjectParameter("icon2", icon2) :
                new ObjectParameter("icon2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProductTypeById", idTypeParameter, typeParameter, icon1Parameter, icon2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> User_rating(Nullable<System.Guid> idProduct, Nullable<System.Guid> idUser)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("User_rating", idProductParameter, idUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> verify_User_data(string mail, string password)
        {
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("verify_User_data", mailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> verify_User_rating(Nullable<System.Guid> idUser, Nullable<System.Guid> idProduct)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("verify_User_rating", idUserParameter, idProductParameter);
        }
    
        public virtual int addProductToCart(Nullable<System.Guid> idCart, Nullable<System.Guid> idUser, Nullable<System.Guid> idProduct)
        {
            var idCartParameter = idCart.HasValue ?
                new ObjectParameter("IdCart", idCart) :
                new ObjectParameter("IdCart", typeof(System.Guid));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProductToCart", idCartParameter, idUserParameter, idProductParameter);
        }
    
        public virtual int checkQuantitiesForUser(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("checkQuantitiesForUser", idUserParameter);
        }
    
        public virtual int FinalPriceInvoice(Nullable<System.Guid> idinvoice)
        {
            var idinvoiceParameter = idinvoice.HasValue ?
                new ObjectParameter("Idinvoice", idinvoice) :
                new ObjectParameter("Idinvoice", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FinalPriceInvoice", idinvoiceParameter);
        }
    }
}
